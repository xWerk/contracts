cancelRequest.t.sol
├── when the payment request IS null 
│   └── it should revert with the {NullRequest} error
└── when the payment request IS NOT null
    ├── when the request status IS Paid
    │   └── it should revert with the {RequestPaid} error
    └── when the request status IS NOT Paid
        ├── when the request status IS Canceled
        │   └── it should revert with the {RequestCanceled} error
        └── when the request status IS NOT Canceled
            ├── given the payment method is transfer
            │   ├── given the request status is Accepted
            │   │   └── when the sender IS NOT the request recipient
            │   │       └── it should revert with the {OnlyRequestRecipient}        
            │   └── given the request status is Pending
            │       ├── when the sender IS NOT the request recipient
            │       │   └── it should revert with the {OnlyRequestRecipient}
            │       └── when the sender IS the request recipient
            │           ├── it should mark the request as Canceled
            │           └── it should emit a {RequestCanceled} event
            ├── given the payment method is linear stream-based
            │   ├── given the request status is Pending
            │   │   ├── when the sender IS NOT the request recipient
            │   │   │   └── it should revert with the {OnlyRequestRecipient}
            │   │   └── when the sender IS the request recipient
            │   │       ├── it should mark the request as Canceled
            │   │       └── it should emit an {RequestCanceled} event
            │   └── given the request status is Ongoing
            │        ├── when the sender IS NOT the initial stream sender
            │        │   └── it should revert with the {OnlyInitialStreamSender} error 
            │        └── when the sender IS the initial stream sender 
            │            ├── it should mark the request as Canceled
            │            └── it should emit an {RequestCanceled} event
            └── given the payment method is tranched stream-based
                ├── given the request status is Pending
                │   ├── when the sender IS NOT the request recipient
                │   │   └── it should revert with the {OnlyRequestRecipient}
                │   └── when the sender IS the request recipient
                │       ├── it should mark the request as Canceled
                │       └── it should emit an {RequestCanceled} event
                └── given the request status is Ongoing
                    ├── when the sender IS NOT the initial stream sender
                    │   └──it should revert with the {OnlyInitialStreamSender} error 
                    └── when the sender IS the initial stream sender 
                        ├── it should mark the request as Canceled
                        └── it should emit an {RequestCanceled} event
            
